- name: openhpc-oe-jenkins-jumper
  hosts: openhpc_oe_jenkins_jumper
  become: yes
  gather_facts: True
  vars:
    distro: rocky9.2
    jenkins_name: huawei
  tasks:
  - name: install obs repository configuration
    template:
      src: OpenHPC-obs-factory.repo
      dest: /etc/yum.repos.d/
      owner: root
      group: root
      mode: 0644
  - name: install packages
    package:
      state: present
      name:
      - java-17-openjdk-headless
      - losf-ohpc
      - openvpn
      - git
      - ipmitool
      - netcat
      - rsync
      - ansible

  - name: install jenkins systemd unit files
    copy:
      src: "{{item}}"
      dest: /etc/systemd/system/{{item}}
      owner: root
      group: root
      mode: 0644
    register: jenkins_agent_service
    with_items:
    - swarm-prepare.service
    - jenkins-prepare.service
    - jenkins-agent.service

  - name: systemd daemon-reload
    ansible.builtin.systemd:
      daemon_reload: true
    when: jenkins_agent_service.changed

  - name: enable jenkins agent service
    service: name=jenkins-agent enabled=yes state=started

  # This requires that the following command already ran:
  # 'openvpn3 config-import -p -n Huawei -c /root/HuaweiVPN/Huawei.ovpn'
  - name: enable openvpn3-session@Huawei service
    service: name=openvpn3-session@Huawei enabled=yes state=started

  - name: install openvpn client file
    copy:
      src: client-tun1.conf
      dest: /etc/openvpn/client/tun1.conf
      owner: root
      group: root
      mode: 0600

  - name: enable openvpn-client@tun1
    service: name=openvpn-client@tun1 enabled=yes state=started

  - name: enable firewalld
    service: name=firewalld enabled=yes state=started

  - name: allow sms to sync time
    ansible.builtin.lineinfile:
      path: /etc/chrony.conf
      state: present
      line: 'allow 172.31/16'
    register: chrony_changed

  - name: restart chronyd
    service:
      name: chronyd
      state: restarted
    when: chrony_changed.changed

  - import_tasks: test-oe-common.yml

  - name: enable masquerade in public zone
    ansible.posix.firewalld:
      masquerade: true
      state: enabled
      permanent: true
      zone: public
      immediate: true

  - name: allow ntp access
    ansible.posix.firewalld:
      zone: public
      service: ntp
      permanent: true
      state: enabled
      immediate: true

  - name: add tun1 to public zone
    ansible.posix.firewalld:
      zone: public
      interface: tun1
      permanent: true
      immediate: true
